// Client automatically generated by SDKgen please do not edit this file manually
// @see https://sdkgen.app

package consumer

import (
	"github.com/apioo/sdkgen-go"
)

type Client struct {
	internal *sdkgen.Client
}

// ConsumerUser Tag: consumer.user
func (client Client) ConsumerUser() *ConsumerUserGroup {
	return NewConsumerUserGroup(client.internal.GetResource())
}

// ConsumerTransaction Tag: consumer.transaction
func (client Client) ConsumerTransaction() *ConsumerTransactionGroup {
	return NewConsumerTransactionGroup(client.internal.GetResource())
}

// ConsumerSubscription Tag: consumer.subscription
func (client Client) ConsumerSubscription() *ConsumerSubscriptionGroup {
	return NewConsumerSubscriptionGroup(client.internal.GetResource())
}

// ConsumerScope Tag: consumer.scope
func (client Client) ConsumerScope() *ConsumerScopeGroup {
	return NewConsumerScopeGroup(client.internal.GetResource())
}

// ConsumerPlan Tag: consumer.plan
func (client Client) ConsumerPlan() *ConsumerPlanGroup {
	return NewConsumerPlanGroup(client.internal.GetResource())
}

// ConsumerPayment Tag: consumer.payment
func (client Client) ConsumerPayment() *ConsumerPaymentGroup {
	return NewConsumerPaymentGroup(client.internal.GetResource())
}

// ConsumerPage Tag: consumer.page
func (client Client) ConsumerPage() *ConsumerPageGroup {
	return NewConsumerPageGroup(client.internal.GetResource())
}

// ConsumerLog Tag: consumer.log
func (client Client) ConsumerLog() *ConsumerLogGroup {
	return NewConsumerLogGroup(client.internal.GetResource())
}

// ConsumerGrant Tag: consumer.grant
func (client Client) ConsumerGrant() *ConsumerGrantGroup {
	return NewConsumerGrantGroup(client.internal.GetResource())
}

// ConsumerEvent Tag: consumer.event
func (client Client) ConsumerEvent() *ConsumerEventGroup {
	return NewConsumerEventGroup(client.internal.GetResource())
}

// ConsumerApp Tag: consumer.app
func (client Client) ConsumerApp() *ConsumerAppGroup {
	return NewConsumerAppGroup(client.internal.GetResource())
}

func NewClient(baseUrl string, credentials sdkgen.CredentialsInterface, tokenStore sdkgen.TokenStoreInterface, scopes []string) *Client {

	return &Client{
		internal: sdkgen.NewClient(baseUrl, credentials, tokenStore, scopes),
	}
}
