// Client automatically generated by SDKgen please do not edit this file manually
// @see https://sdkgen.app

package backend

import (
	"github.com/apioo/sdkgen-go"
)

type Client struct {
	internal *sdkgen.Client
}

// BackendUser Tag: backend.user
func (client Client) BackendUser() *BackendUserGroup {
	return NewBackendUserGroup(client.internal.GetResource())
}

// BackendTrash Tag: backend.trash
func (client Client) BackendTrash() *BackendTrashGroup {
	return NewBackendTrashGroup(client.internal.GetResource())
}

// BackendTransaction Tag: backend.transaction
func (client Client) BackendTransaction() *BackendTransactionGroup {
	return NewBackendTransactionGroup(client.internal.GetResource())
}

// BackendStatistic Tag: backend.statistic
func (client Client) BackendStatistic() *BackendStatisticGroup {
	return NewBackendStatisticGroup(client.internal.GetResource())
}

// BackendSdk Tag: backend.sdk
func (client Client) BackendSdk() *BackendSdkGroup {
	return NewBackendSdkGroup(client.internal.GetResource())
}

// BackendScope Tag: backend.scope
func (client Client) BackendScope() *BackendScopeGroup {
	return NewBackendScopeGroup(client.internal.GetResource())
}

// BackendSchema Tag: backend.schema
func (client Client) BackendSchema() *BackendSchemaGroup {
	return NewBackendSchemaGroup(client.internal.GetResource())
}

// BackendRoute Tag: backend.route
func (client Client) BackendRoute() *BackendRouteGroup {
	return NewBackendRouteGroup(client.internal.GetResource())
}

// BackendRole Tag: backend.role
func (client Client) BackendRole() *BackendRoleGroup {
	return NewBackendRoleGroup(client.internal.GetResource())
}

// BackendRate Tag: backend.rate
func (client Client) BackendRate() *BackendRateGroup {
	return NewBackendRateGroup(client.internal.GetResource())
}

// BackendPlan Tag: backend.plan
func (client Client) BackendPlan() *BackendPlanGroup {
	return NewBackendPlanGroup(client.internal.GetResource())
}

// BackendPage Tag: backend.page
func (client Client) BackendPage() *BackendPageGroup {
	return NewBackendPageGroup(client.internal.GetResource())
}

// BackendMarketplace Tag: backend.marketplace
func (client Client) BackendMarketplace() *BackendMarketplaceGroup {
	return NewBackendMarketplaceGroup(client.internal.GetResource())
}

// BackendLog Tag: backend.log
func (client Client) BackendLog() *BackendLogGroup {
	return NewBackendLogGroup(client.internal.GetResource())
}

// BackendGenerator Tag: backend.generator
func (client Client) BackendGenerator() *BackendGeneratorGroup {
	return NewBackendGeneratorGroup(client.internal.GetResource())
}

// BackendEvent Tag: backend.event
func (client Client) BackendEvent() *BackendEventGroup {
	return NewBackendEventGroup(client.internal.GetResource())
}

// BackendDashboard Tag: backend.dashboard
func (client Client) BackendDashboard() *BackendDashboardGroup {
	return NewBackendDashboardGroup(client.internal.GetResource())
}

// BackendCronjob Tag: backend.cronjob
func (client Client) BackendCronjob() *BackendCronjobGroup {
	return NewBackendCronjobGroup(client.internal.GetResource())
}

// BackendConnection Tag: backend.connection
func (client Client) BackendConnection() *BackendConnectionGroup {
	return NewBackendConnectionGroup(client.internal.GetResource())
}

// BackendConfig Tag: backend.config
func (client Client) BackendConfig() *BackendConfigGroup {
	return NewBackendConfigGroup(client.internal.GetResource())
}

// BackendCategory Tag: backend.category
func (client Client) BackendCategory() *BackendCategoryGroup {
	return NewBackendCategoryGroup(client.internal.GetResource())
}

// BackendAudit Tag: backend.audit
func (client Client) BackendAudit() *BackendAuditGroup {
	return NewBackendAuditGroup(client.internal.GetResource())
}

// BackendApp Tag: backend.app
func (client Client) BackendApp() *BackendAppGroup {
	return NewBackendAppGroup(client.internal.GetResource())
}

// BackendAction Tag: backend.action
func (client Client) BackendAction() *BackendActionGroup {
	return NewBackendActionGroup(client.internal.GetResource())
}

// BackendAccount Tag: backend.account
func (client Client) BackendAccount() *BackendAccountGroup {
	return NewBackendAccountGroup(client.internal.GetResource())
}

func NewClient(baseUrl string, credentials sdkgen.CredentialsInterface, tokenStore sdkgen.TokenStoreInterface, scopes []string) *Client {

	return &Client{
		internal: sdkgen.NewClient(baseUrl, credentials, tokenStore, scopes),
	}
}
