// BackendAccountResource automatically generated by SDKgen please do not edit this file manually
// @see https://sdkgen.app

package backend

import (
	"bytes"

	"errors"
	"github.com/apioo/sdkgen-go"

	"net/http"
	"net/url"
)

type BackendAccountResource struct {
	url    string
	client *http.Client
}

// BackendActionAccountGet
func (resource BackendAccountResource) BackendActionAccountGet() (User, error) {
	url, err := url.Parse(resource.url)
	if err != nil {
		return User{}, errors.New("could not parse url")
	}

	req, err := http.NewRequest("GET", url.String(), nil)
	if err != nil {
		return User{}, errors.New("could not create request")
	}

	resp, err := resource.client.Do(req)
	if err != nil {
		return User{}, errors.New("could not send request")
	}

	defer resp.Body.Close()

	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		return User{}, errors.New("could not read response body")
	}

	var response User

	err = json.Unmarshal(respBody, &response)
	if err != nil {
		return User{}, errors.New("could not unmarshal JSON response")
	}

	return response, nil
}

// BackendActionAccountUpdate
func (resource BackendAccountResource) BackendActionAccountUpdate(data UserUpdate) (Message, error) {
	url, err := url.Parse(resource.url)
	if err != nil {
		return Message{}, errors.New("could not parse url")
	}

	raw, err := json.Marshal(data)
	if err != nil {
		return Message{}, errors.New("could not marshal provided JSON data")
	}

	var reqBody = bytes.NewReader(raw)

	req, err := http.NewRequest("PUT", url.String(), reqBody)
	if err != nil {
		return Message{}, errors.New("could not create request")
	}

	req.Header.Set("Content-Type", "application/json")

	resp, err := resource.client.Do(req)
	if err != nil {
		return Message{}, errors.New("could not send request")
	}

	defer resp.Body.Close()

	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		return Message{}, errors.New("could not read response body")
	}

	var response Message

	err = json.Unmarshal(respBody, &response)
	if err != nil {
		return Message{}, errors.New("could not unmarshal JSON response")
	}

	return response, nil
}

func NewBackendAccountResource(resource *sdkgen.Resource) *BackendAccountResource {
	return &BackendAccountResource{
		url:    resource.BaseUrl + "/backend/account",
		client: resource.HttpClient,
	}
}
